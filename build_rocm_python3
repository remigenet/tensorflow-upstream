#!/usr/bin/env bash
#
# prerequisites: install python3
# sudo apt-get install python3-numpy python3-dev python3-pip python3-wheel
#
# configure with python3
# PYTHON_BIN_PATH=/usr/bin/python3 ./configure
#
# press enter all the way
#

while getopts "hrn" opt; do
  case ${opt} in
    h)
        echo "Options:"
        echo "-r     Use -r to define bazel resource restriction"
        exit 0
        ;;
    r)
        restriction=true
        ;;
    n)
	nightly=true
    esac
done
shift "$((OPTIND-1))"

# First positional argument (if any) specifies the ROCM_INSTALL_DIR
ROCM_INSTALL_DIR=/opt/rocm-5.7.0
if [[ -n $1 ]]; then
    ROCM_INSTALL_DIR=$1
fi

ROCM_PATH=$ROCM_INSTALL_DIR

# Explicitly delete the old whl packages in the /tmp/tensorflow_pkg dir
# Doing so comes in handy when the TF version number changes, because
# it will cause the last line in this script (pip3 install ...) to fail.
# Not deleting the old whl packages results in the last line installing
# TF from the previous whl pakcage (if present) and not the current one
# that was just built by this script. Since this error is not apparent, it
# can lead to a lot of frustation and lost time trying to figure why the
# changes made in the current build are not working!
TF_PKG_LOC=/tmp/tensorflow_pkg
if [[ -n $nightly ]]; then
	rm -f $TF_PKG_LOC/tf_nightly_rocm*.whl
else
	rm -f $TF_PKG_LOC/tensorflow*.whl
fi

PYTHON_VERSION=`python3 -c "import sys;print(f'{sys.version_info.major}.{sys.version_info.minor}')"`
export TF_PYTHON_VERSION=$PYTHON_VERSION
yes "" | TF_NEED_CLANG=0 ROCM_PATH=$ROCM_INSTALL_DIR TF_NEED_ROCM=1 PYTHON_BIN_PATH=/usr/bin/python3 ./configure
# Explicitly define resource constraints on bazel to avoid overload on rocm-ci
if [[ -n $restriction ]]; then
    RESOURCE_OPTION="--local_ram_resources=60000 --local_cpu_resources=35 --jobs=70"
else
    RESOURCE_OPTION=""
fi

if [[ -n $nightly ]]; then
	bazel build $RESOURCE_OPTION --config=opt --config=rocm //tensorflow/tools/pip_package:build_pip_package --verbose_failures &&
	bazel-bin/tensorflow/tools/pip_package/build_pip_package $TF_PKG_LOC --rocm --nightly_flag &&
	pip3 install --upgrade $TF_PKG_LOC/tf_nightly_rocm*.whl
else
	bazel build $RESOURCE_OPTION --config=opt --config=rocm //tensorflow/tools/pip_package:build_pip_package --verbose_failures &&
	bazel-bin/tensorflow/tools/pip_package/build_pip_package $TF_PKG_LOC --rocm &&
	pip3 install --upgrade $TF_PKG_LOC/tensorflow*.whl
fi
